{"version":3,"sources":["components/Layout/index.js","components/common/slider/index.js","components/common/Card.jsx","redux/types/index.js","components/homepage/section.jsx","components/homepage/index.js","components/common/loader.jsx","components/details/index.jsx","components/movieGrid/MovieGrid.jsx","components/search/index.js","hooks/useDebounce.js","components/navbar/index.js","config/axiosConfig.js","App.js","serviceWorker.js","redux/reducers/search.js","redux/reducers/movies.js","redux/reducers/favourites.js","redux/reducers/index.js","redux/actions/search.js","redux/sagas/search.js","redux/actions/getPopular.js","redux/sagas/getPopular.js","redux/sagas/topMovies.js","redux/actions/getNowPlaying.js","redux/sagas/nowPlaying.js","redux/actions/favourites.js","redux/sagas/favourites.js","redux/actions/movie.js","redux/sagas/movie.js","redux/sagas/index.js","redux/store/index.js","index.js","redux/types/search.js","redux/types/popularMovies.js","redux/types/topMovies.js","redux/types/nowPlaying.js","redux/types/favourites.js","redux/types/movie.js"],"names":["Layout","children","className","style","color","settings","dots","infinite","speed","slidesToShow","slidesToScroll","Slider","props","Card","item","title","subtitle","image","isFavourite","handleClick","src","alt","onClick","e","aria-hidden","to","id","SEARCH","POPULAR_MOVIES","TOP_MOVIES","NOW_PLAYING","FAVOURITE","MOVIE","connect","state","favourites","list","dispatch","setFavourite","data","type","TYPES","TOGGLE","movie","checkFavourite","findIndex","element","map","release_date","split","process","poster_path","popularMovies","movies","popular","topMovies","top","nowPlaying","isLoading","getPopularMovies","REQUEST","getTopRated","getNowPlaying","useEffect","Loader","class","Component","selected","isFetching","getMovie","movieID","useParams","backdrop_path","overview","genres","genre","name","status","runtime","revenue","searching","length","searchResult","search","searchHistory","history","searchMovie","searchTerm","setSearchOpen","searchOpen","useState","setSearchTerm","debouncedSearchTerm","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","useHistory","location","useLocation","push","pathname","htmlFor","aria-label","placeholder","onChange","target","required","NavBar","axios","defaults","baseURL","headers","common","searchResults","exact","path","Boolean","window","hostname","match","initialState","action","SUCCESS","payload","FAILURE","JSON","parse","localStorage","getItem","rootReducer","combineReducers","getSearchedMovie","a","res","toLowerCase","then","Error","catch","error","console","log","response","results","warn","searchMovieSaga","call","put","takeLatest","getPopular","page","getPopularSaga","getTop","getTopSaga","getTopMovies","getNow","toggleFavourite","items","newItems","filter","setItem","stringify","toggleFavouriteSaga","toggleFavouriteMovie","getMovies","rootSagas","all","getNowPlayingSaga","favouritesSaga","movieSaga","sagaMiddlewear","createSagaMiddlewear","store","createStore","rootReducers","applyMiddleware","run","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.5ace8238.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <>\r\n      <div className=\"page-bg\">\r\n        <div className=\"content\" style={{ color: 'white' }}>\r\n          <div className=\"item-row-wrap\">\r\n            <div className=\"container\">\r\n              <div className=\"items-box\">\r\n                {children}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react'\nimport SlickSlider from \"react-slick\";\n\nvar settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 5,\n    slidesToScroll: 5\n};\n\nconst Slider = ({ children, ...props }) => {\n    return (\n        <SlickSlider {...settings} {...props}>\n            {children}\n        </SlickSlider>\n    )\n}\n\nexport default Slider","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst Card = ({ item, title, subtitle, image, isFavourite, handleClick }) => {\n    const onClick = (e) => {\n        handleClick && handleClick()\n    }\n\n    return (\n        <div className=\"item-content\">\n            <div className=\"item-img\">\n                <img src={image} alt=\"\" />\n                <button onClick={onClick} className=\"btn-fav\">\n                    <i className={`fa fa-star ${isFavourite ? \"is-favourite\" : \"\"}`} aria-hidden=\"true\"></i>\n                </button>\n            </div>\n            <Link to={`/movie/${item.id}`}>\n                <div className=\"item-info\">\n                    <h4>{title}</h4>\n                    <h6>{subtitle}</h6>\n                </div>\n            </Link>\n        </div>\n    )\n}\n\nexport default Card","import SEARCH from \"./search\";\r\nimport POPULAR_MOVIES from \"./popularMovies\";\r\nimport TOP_MOVIES from \"./topMovies\";\r\nimport NOW_PLAYING from \"./nowPlaying\";\r\nimport FAVOURITE from \"./favourites\";\r\nimport MOVIE from './movie'\r\n\r\n\r\nexport default { SEARCH, POPULAR_MOVIES, TOP_MOVIES, NOW_PLAYING, FAVOURITE, MOVIE };\r\n","import React from 'react'\nimport Slider from '../common/slider'\nimport Card from '../common/Card'\nimport TYPES from '../../redux/types'\nimport { connect } from 'react-redux'\n\nconst Section = ({ title, data, favourites, setFavourite }) => {\n    const checkFavourite = (item) => {\n\n        const isPresent = (element) => element.id == item.id;\n\n        let flag = favourites.findIndex(isPresent)\n\n        if (flag === -1) {\n            return false\n        }\n        else {\n            return true\n        }\n    }\n\n    return (\n\n        <div className=\"mb-100\">\n            <h2 className=\"sec-title\">{title}</h2>\n            <div id=\"itemsRow\" className=\"items-row\">\n                <Slider>\n                    {\n                        data.map(item =>\n                            <Card\n                                item={item}\n                                isFavourite={checkFavourite(item)}\n                                title={item.title}\n                                subtitle={item?.release_date?.split(\"-\")[0]}\n                                image={`${process.env.REACT_APP_IMAGE_BASE_URL}/w342${item.poster_path}`}\n                                handleClick={() => setFavourite(item)}\n                            />\n                        )\n                    }\n                </Slider>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    favourites: state.favourites.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setFavourite: data =>\n        dispatch({ type: TYPES.FAVOURITE.TOGGLE, movie: data }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Section);","import React, { useEffect } from 'react'\nimport Section from './section'\nimport { connect } from \"react-redux\";\nimport TYPES from \"../../redux/types\";\n\nconst Homepage = (props) => {\n    let { getPopularMovies, getTopRated, getNowPlaying } = props\n    let { popularMovies, topMovies, nowPlaying } = props\n\n    useEffect(() => {\n        getPopularMovies()\n        getTopRated()\n        getNowPlaying()\n    }, [])\n\n    return (\n        <div>\n            <Section\n                title=\"See Popular\"\n                data={popularMovies}\n            />\n            <Section\n                title=\"Top Rated\"\n                data={topMovies}\n            />\n            <Section\n                title=\"Now Playing\"\n                data={nowPlaying}\n            />\n        </div>\n    )\n}\n\n{/* , , or  */ }\n\nconst mapStateToProps = state => ({\n    popularMovies: state.movies.popular,\n    topMovies: state.movies.top,\n    nowPlaying: state.movies.nowPlaying,\n    isLoading: state.movies.isLoading,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getPopularMovies: data =>\n        dispatch({ type: TYPES.POPULAR_MOVIES.REQUEST }),\n    getTopRated: data =>\n        dispatch({ type: TYPES.TOP_MOVIES.REQUEST }),\n    getNowPlaying: data =>\n        dispatch({ type: TYPES.NOW_PLAYING.REQUEST }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Homepage);","import React, { Component } from 'react'\n\nexport default class Loader extends Component {\n    render() {\n        return (\n            <div class=\"fa-3x loader-icon\">\n                <i class=\"fa fa-spinner\" aria-hidden=\"true\"></i>\n            </div>\n        )\n    }\n}\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport TYPES from '../../redux/types';\nimport { useParams } from 'react-router-dom';\nimport Loader from '../common/loader';\n\nconst Details = ({ movie, getMovie, isFetching }) => {\n    let { movieID } = useParams();\n    useEffect(() => {\n        getMovie(movieID)\n    }, [])\n\n    if (isFetching) {\n        return (\n            <Loader />\n        )\n    }\n\n    if (movie) {\n        return (\n\n            <div className=\"item-details\">\n                <div className=\"item-detail-img\">\n                    <img src={`${process.env.REACT_APP_IMAGE_BASE_URL}/w1280${movie.backdrop_path}`} alt=\"\" />\n                </div>\n                <div className=\"item-detail-info\">\n                    <h1>{movie.title}</h1>\n                    <p>{movie.overview}</p>\n                    <div className=\"item-genres\">\n                        <h3>Genres:</h3>\n                        {movie.genres.map(genre => <p>{genre.name}</p>)}\n                    </div>\n                    <span><b>Status:</b> {movie.status}</span>\n                    <span><b>Runtime:</b> {movie.runtime}</span>\n                    <span><b>Revenue:</b> {movie.revenue}</span>\n                    <span><b>Release Date:</b> {movie.release_date}</span>\n                </div>\n            </div>\n\n        )\n    }\n    else { return <h1>Not Found</h1> }\n}\n\nconst mapStateToProps = state => ({\n    movie: state.movies.selected,\n    isFetching: state.movies.isFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n    getMovie: data =>\n        dispatch({ type: TYPES.MOVIE.REQUEST, id: data }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Details);","import React from 'react'\nimport Card from '../common/Card'\nimport { connect } from 'react-redux'\nimport TYPES from '../../redux/types'\nimport Loader from '../common/loader'\n\nconst MovieGrid = ({ data, searching, favourites, setFavourite }) => {\n    const checkFavourite = (item) => {\n\n        const isPresent = (element) => element.id == item.id;\n\n        let flag = favourites.findIndex(isPresent)\n\n        if (flag === -1) {\n            return false\n        }\n        else {\n            return true\n        }\n    }\n\n    if (searching) {\n        return (\n            <Loader />\n        )\n    }\n    else {\n        return (\n            <div className=\"content\">\n                <div className=\"movie-grid\">\n                    <div className=\"content\">\n                        {\n                            !data || data.length <= 0 ?\n                                <div className=\"search-content\">\n                                    <h5>No Results Found</h5>\n                                </div>\n                                :\n                                data.map(item =>\n                                    <Card\n                                        item={item}\n                                        title={item.title}\n                                        subtitle={item?.release_date?.split(\"-\")[0]}\n                                        image={`${process.env.REACT_APP_IMAGE_BASE_URL}/w342${item.poster_path}`}\n                                        isFavourite={checkFavourite(item)}\n                                        handleClick={() => setFavourite(item)}\n                                    />\n                                )\n                        }\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => ({\n    favourites: state.favourites.list\n});\n\nconst mapDispatchToProps = dispatch => ({\n    setFavourite: data =>\n        dispatch({ type: TYPES.FAVOURITE.TOGGLE, movie: data }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieGrid);","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TYPES from \"../../redux/types\";\r\nimport useDebounce from \"../../hooks/useDebounce\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst Search = props => {\r\n  const { searchMovie, setSearchOpen, searchOpen } = props;\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const debouncedSearchTerm = useDebounce(searchTerm, 1000);\r\n\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  const handleClick = e => {\r\n    if (searchTerm.length > 3) {\r\n      searchMovie(searchTerm);\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const handleSearchClick = () => {\r\n    setSearchOpen(!searchOpen)\r\n    // !searchOpen && history.push('/search')\r\n  }\r\n\r\n  useEffect(() => {\r\n    handleClick()\r\n    history.push('/search')\r\n  }, [debouncedSearchTerm])\r\n\r\n  useEffect(() => {\r\n    if (location.pathname) {\r\n      setSearchTerm(\"\")\r\n    }\r\n  }, [location.pathname])\r\n\r\n  return (\r\n    <>\r\n      <div className=\"search-modal\">\r\n        {\r\n          searchOpen &&\r\n          <>\r\n            <div className=\"form-group\">\r\n              <label id=\"term-label\" htmlFor=\"term\" className=\"form-label\">\r\n                <input\r\n                  name=\"term\"\r\n                  id=\"term\"\r\n                  className=\"\"\r\n                  type=\"search\"\r\n                  aria-label=\"Search\"\r\n                  placeholder=\"Enter Movie Name\"\r\n                  title=\"Enter Movie Name\"\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n              </label>\r\n            </div>\r\n          </>\r\n        }\r\n        <button onClick={handleSearchClick} className=\"btn-search-toggle\">\r\n          {searchOpen ?\r\n            <i className=\"fa fa-close\" aria-hidden=\"true\"></i> :\r\n            <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n          }\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  searchResult: state.search.searchResult,\r\n  isLoading: state.search.isLoading,\r\n  searchHistory: state.search.history,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  searchMovie: data =>\r\n    dispatch({ type: TYPES.SEARCH.REQUEST, searchTerm: data }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import { useState, useEffect, useRef } from 'react';\n\nexport default function useDebounce(value, delay) {\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        },\n        [value, delay]\n    );\n\n    return debouncedValue;\n}\n","import React from 'react'\nimport SearchBar from '../search/index'\nimport { Link } from 'react-router-dom'\n\nconst NavBar = ({ setSearchOpen, searchOpen }) => {\n    return (\n        <header className=\"header\">\n            <div className=\"header-container\">\n                <nav className=\"header-nav\">\n                    <Link to='/'><h5>Home</h5></Link>\n                    <SearchBar setSearchOpen={setSearchOpen} searchOpen={searchOpen} />\n                </nav>\n            </div>\n        </header>\n    )\n}\n\nexport default NavBar\n","import axios from 'axios'\n\nexport default () => {\n    axios.defaults.baseURL = process.env.REACT_APP_API_URL\n    axios.defaults.headers.common['Authorization'] = `Bearer ${process.env.REACT_APP_API_ACCESS_KEY}`;\n}","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Layout from \"./components/Layout\";\nimport Homepage from './components/homepage'\nimport Details from './components/details'\nimport axiosConfig from \"./config/axiosConfig\";\nimport MovieGrid from \"./components/movieGrid/MovieGrid\";\nimport NavBar from \"./components/navbar\";\n\naxiosConfig()\n\nfunction App(props) {\n  let [searchOpen, setSearchOpen] = useState(false)\n  let { searchResults } = props\n  let { searching } = props\n\n  return (\n    <>\n      <NavBar setSearchOpen={setSearchOpen} searchOpen={searchOpen} />\n      <Layout>\n        <Switch>\n          <Route exact path='/Movies-app'>\n            <Homepage searchOpen={searchOpen} />\n          </Route>\n          <Route exact path='/search'>\n            <MovieGrid data={searchResults} searching={searching} />\n          </Route>\n          <Route path='/movie/:movieID'>\n            <Details />\n          </Route>\n        </Switch>\n      </Layout>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  searchResults: state.search.searchResult,\n  searching: state.search.isLoading,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import TYPES from \"../types\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  searchTerm: \"\",\r\n  searchResult: null,\r\n  history: [],\r\n};\r\n\r\nconst search = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.SEARCH.REQUEST:\r\n      let searchHistory = [...state.history];\r\n      searchHistory.push(action.searchTerm);\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        searchTerm: action.searchTerm,\r\n        history: searchHistory,\r\n      };\r\n    case TYPES.SEARCH.SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        searchResult: action.payload,\r\n      };\r\n    case TYPES.SEARCH.FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        searchResult: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default search;\r\n","import TYPES from \"../types\";\n\nconst initialState = {\n    isLoading: false,\n    isFetching: false,\n    popular: [],\n    top: [],\n    nowPlaying: [],\n    selected: null\n};\n\nconst movies = (state = initialState, action) => {\n    switch (action.type) {\n        case TYPES.POPULAR_MOVIES.REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case TYPES.TOP_MOVIES.REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case TYPES.POPULAR_MOVIES.SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                popular: action.payload,\n            };\n        case TYPES.TOP_MOVIES.SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                top: action.payload,\n            };\n        case TYPES.NOW_PLAYING.REQUEST:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case TYPES.NOW_PLAYING.SUCCESS:\n            return {\n                ...state,\n                isLoading: false,\n                nowPlaying: action.payload,\n            };\n        case TYPES.POPULAR_MOVIES.FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n                popular: [],\n            };\n        case TYPES.MOVIE.REQUEST:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case TYPES.MOVIE.SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                selected: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default movies;\n","import TYPES from \"../types\";\n\nlet list = JSON.parse(localStorage.getItem('favourites'))\n\nconst initialState = {\n    list: list || []\n};\n\nconst favourites = (state = initialState, action) => {\n    switch (action.type) {\n        case TYPES.FAVOURITE.TOGGLE:\n            return {\n                ...state,\n            };\n        case TYPES.FAVOURITE.SUCCESS:\n            return {\n                ...state,\n                list: action.payload,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default favourites;\n","import { combineReducers } from \"redux\";\nimport search from \"./search\";\nimport movies from './movies'\nimport favourites from './favourites'\n\nconst rootReducer = combineReducers({\n  search,\n  movies,\n  favourites,\n});\n\nexport default rootReducer;\n","import axios from 'axios'\r\n\r\nexport default async function getSearchedMovie(searchTerm) {\r\n  try {\r\n    let res = axios(\r\n      `/search/movie?query=${searchTerm.toLowerCase()}`\r\n    )\r\n      .then(res => {\r\n        if (res.status === 200) {\r\n          return res.data;\r\n        } else {\r\n          throw new Error(\"not found\");\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n\r\n    const response = await res;\r\n\r\n    return {\r\n      payload: response.results\r\n    };\r\n  } catch (error) {\r\n    console.warn(\"error\");\r\n    return {\r\n      payload: null,\r\n    };\r\n  }\r\n}","import { put, takeLatest, call } from \"redux-saga/effects\";\r\nimport getSearchedMovie from \"../actions/search\";\r\nimport TYPES from \"../types/index\";\r\n\r\nfunction* searchMovie(action) {\r\n  try {\r\n    const data = yield call(getSearchedMovie, action.searchTerm);\r\n    if (!data.payload) {\r\n      throw new Error(\"No data found\");\r\n    }\r\n    yield put({\r\n      type: TYPES.SEARCH.SUCCESS,\r\n      payload: data.payload,\r\n    });\r\n  } catch (error) {\r\n    yield put({ type: TYPES.SEARCH.FAILURE });\r\n  }\r\n}\r\n\r\nexport default function* searchMovieSaga() {\r\n  yield takeLatest(TYPES.SEARCH.REQUEST, searchMovie);\r\n}\r\n","import axios from 'axios'\n\nexport default async function getPopular(page = 1) {\n    try {\n        let response = axios(\n            `/movie/popular?&language=en-US&page=${page}`\n        )\n            .then(res => {\n                if (res.status === 200) {\n                    return res.data;\n                } else {\n                    throw new Error(\"not found\");\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n        const res = await response;\n\n        return {\n            payload: res.results,\n        };\n    } catch (error) {\n        console.warn(\"error\");\n        return {\n            payload: null,\n        };\n    }\n}\n","import { put, takeLatest, call } from \"redux-saga/effects\";\nimport getPopularMovies from \"../actions/getPopular\";\nimport TYPES from \"../types/index\";\n\nfunction* getPopular(action) {\n    try {\n        const data = yield call(getPopularMovies, action.page);\n        if (!data.payload) {\n            throw new Error(\"No data found\");\n        }\n        yield put({\n            type: TYPES.POPULAR_MOVIES.SUCCESS,\n            payload: data.payload,\n        });\n    } catch (error) {\n        yield put({ type: TYPES.POPULAR_MOVIES.FAILURE });\n    }\n}\n\nexport default function* getPopularSaga() {\n    yield takeLatest(TYPES.POPULAR_MOVIES.REQUEST, getPopular);\n}\n","import { put, takeLatest, call } from \"redux-saga/effects\";\nimport getTopMovies from \"../actions/getPopular\";\nimport TYPES from \"../types/index\";\n\nfunction* getTop(action) {\n    try {\n        const data = yield call(getTopMovies, action.page);\n        if (!data.payload) {\n            throw new Error(\"No data found\");\n        }\n        yield put({\n            type: TYPES.TOP_MOVIES.SUCCESS,\n            payload: data.payload,\n        });\n    } catch (error) {\n        yield put({ type: TYPES.TOP_MOVIES.FAILURE });\n    }\n}\n\nexport default function* getTopSaga() {\n    yield takeLatest(TYPES.TOP_MOVIES.REQUEST, getTop);\n}\n","import axios from 'axios'\n\nexport default async function getNowPlaying(page = 1) {\n    try {\n        let response = axios(\n            `/movie/now_playing?&language=en-US&page=${page}`\n        )\n            .then(res => {\n                if (res.status === 200) {\n                    return res.data;\n                } else {\n                    throw new Error(\"not found\");\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n        const res = await response;\n\n        return {\n            payload: res.results,\n        };\n    } catch (error) {\n        console.warn(\"error\");\n        return {\n            payload: null,\n        };\n    }\n}\n","import { put, takeLatest, call } from \"redux-saga/effects\";\nimport getNowPlaying from \"../actions/getNowPlaying\";\nimport TYPES from \"../types/index\";\n\nfunction* getNow(action) {\n    try {\n        const data = yield call(getNowPlaying, action.page);\n        if (!data.payload) {\n            throw new Error(\"No data found\");\n        }\n        yield put({\n            type: TYPES.NOW_PLAYING.SUCCESS,\n            payload: data.payload,\n        });\n    } catch (error) {\n        yield put({ type: TYPES.NOW_PLAYING.FAILURE });\n    }\n}\n\nexport default function* getTopSaga() {\n    yield takeLatest(TYPES.NOW_PLAYING.REQUEST, getNow);\n}\n","export default async function toggleFavourite(movie) {\n    try {\n        let items = JSON.parse(localStorage.getItem('favourites')) || []\n        let newItems\n\n        if (items) {\n            let itemIndex = items.findIndex((element) => element.id == movie.id)\n\n            if (itemIndex === -1) {\n                newItems = [...items]\n                newItems.push(movie)\n            }\n            else {\n                newItems = [...items].filter(item => item.id != movie.id)\n            }\n        }\n        else {\n            return []\n        }\n\n        localStorage.setItem('favourites', JSON.stringify(newItems))\n\n        return {\n            payload: newItems\n        }\n\n    } catch (error) {\n        console.warn(\"error\", error);\n        return {\n            payload: null,\n        };\n    }\n}\n","import { put, takeLatest, call } from \"redux-saga/effects\";\nimport toggleFavouriteMovie from \"../actions/favourites\";\nimport TYPES from \"../types/index\";\n\nfunction* toggleFavourite(action) {\n    try {\n        const data = yield call(toggleFavouriteMovie, action.movie);\n        if (!data.payload) {\n            throw new Error(\"No data found\");\n        }\n        yield put({\n            type: TYPES.FAVOURITE.SUCCESS,\n            payload: data.payload,\n        });\n    } catch (error) {\n        yield put({ type: TYPES.FAVOURITE.FAILURE });\n    }\n}\n\nexport default function* toggleFavouriteSaga() {\n    yield takeLatest(TYPES.FAVOURITE.TOGGLE, toggleFavourite);\n}\n","import axios from 'axios'\n\nexport default async function getMovie(id) {\n    try {\n        let response = axios(\n            `https://api.themoviedb.org/3/movie/${id}?&language=en-US`\n        )\n            .then(res => {\n                if (res.status === 200) {\n                    return res.data;\n                } else {\n                    throw new Error(\"not found\");\n                }\n            })\n            .catch(error => {\n                console.log(error);\n            });\n        const res = await response;\n\n        return {\n            payload: res,\n        };\n    } catch (error) {\n        console.warn(\"error\");\n        return {\n            payload: null,\n        };\n    }\n}\n","import { put, takeLatest, call } from \"redux-saga/effects\";\nimport getMovies from \"../actions/movie\";\nimport TYPES from \"../types/index\";\n\nfunction* getMovie(action) {\n    try {\n        const data = yield call(getMovies, action.id);\n        if (!data.payload) {\n            throw new Error(\"No data found\");\n        }\n        yield put({\n            type: TYPES.MOVIE.SUCCESS,\n            payload: data.payload,\n        });\n    } catch (error) {\n        yield put({ type: TYPES.MOVIE.FAILURE });\n    }\n}\n\nexport default function* getPopularSaga() {\n    yield takeLatest(TYPES.MOVIE.REQUEST, getMovie);\n}\n","import { all } from \"redux-saga/effects\";\nimport searchMovieSaga from \"./search\";\nimport getPopularSaga from \"./getPopular\";\nimport getTopSaga from \"./topMovies\";\nimport getNowPlayingSaga from './nowPlaying';\nimport favouritesSaga from './favourites'\nimport movieSaga from './movie'\n\nexport default function* rootSagas() {\n  yield all([\n    searchMovieSaga(),\n    getPopularSaga(),\n    getTopSaga(),\n    getNowPlayingSaga(),\n    favouritesSaga(),\n    movieSaga(),\n  ]);\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddlewear from \"redux-saga\";\nimport rootReducers from \"../reducers\";\nimport rootSagas from \"../sagas\";\n\nconst sagaMiddlewear = createSagaMiddlewear();\n\nexport const store = createStore(\n  rootReducers,\n  process.env.NODE_ENV === \"production\"\n    ? applyMiddleware(sagaMiddlewear)\n    : composeWithDevTools(applyMiddleware(sagaMiddlewear))\n);\n\nsagaMiddlewear.run(rootSagas);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider, connect } from \"react-redux\";\nimport { store } from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"Movies-app\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\r\n  REQUEST: \"SEARCH_REQUEST\",\r\n  SUCCESS: \"SEARCH_SUCCESS\",\r\n  FAILURE: \"SEARCH_FAILURE\",\r\n};\r\n","module.exports = {\n    REQUEST: \"POPULAR_MOVIES_REQUEST\",\n    SUCCESS: \"POPULAR_MOVIES_SUCCESS\",\n    FAILURE: \"POPULAR_MOVIES_FAILURE\",\n};\n","module.exports = {\n    REQUEST: \"TOP_MOVIES_REQUEST\",\n    SUCCESS: \"TOP_MOVIES_SUCCESS\",\n    FAILURE: \"TOP_MOVIES_FAILURE\",\n};\n","module.exports = {\n    REQUEST: \"NOW_PLAYING_REQUEST\",\n    SUCCESS: \"NOW_PLAYING_SUCCESS\",\n    FAILURE: \"NOW_PLAYING_FAILURE\",\n};\n","module.exports = {\n    TOGGLE: \"FAVOURITE_TOGGLE\",\n    SUCCESS: \"FAVOURITE_TOGGLE_SUCCESS\",\n    FAILURE: \"FAVOURITE_TOGGLE_FAILURE\",\n};\n","module.exports = {\n    REQUEST: \"MOVIE_REQUEST\",\n    SUCCESS: \"MOVIE_SUCCESS\",\n    FAILURE: \"MOVIE_FAILURE\",\n};\n"],"sourceRoot":""}